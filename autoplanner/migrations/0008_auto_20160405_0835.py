# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-04-05 06:35
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields


class Migration(migrations.Migration):

    dependencies = [
        ('autoplanner', '0007_auto_20160222_1947'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='agentcategorypreferences',
            options={'verbose_name': 'preference by agent and category', 'verbose_name_plural': 'preferences by agent and category'},
        ),
        migrations.RemoveField(
            model_name='category',
            name='parent_category',
        ),
        migrations.RemoveField(
            model_name='task',
            name='category',
        ),
        migrations.AddField(
            model_name='task',
            name='categories',
            field=smart_selects.db_fields.ChainedManyToManyField(auto_choose=True, blank=True, chained_field='organization', chained_model_field='organization', db_index=True, to='autoplanner.Category'),
        ),
        migrations.AlterField(
            model_name='agentcategorypreferences',
            name='agent',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='organization', chained_model_field='organization', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, show_all=True, to='autoplanner.Agent'),
        ),
        migrations.AlterField(
            model_name='agentcategorypreferences',
            name='balancing_count',
            field=models.FloatField(blank=True, default=1.0, help_text='Blank if the agent cannot perform tasks of this category', null=True, verbose_name='If a task of this category performed by this agent counts twice, set this number to 2.0.'),
        ),
        migrations.AlterField(
            model_name='agentcategorypreferences',
            name='category',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='organization', chained_model_field='organization', on_delete=django.db.models.deletion.CASCADE, show_all=True, to='autoplanner.Category'),
        ),
        migrations.AlterField(
            model_name='agenttaskexclusion',
            name='agent',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='organization', chained_model_field='organization', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, show_all=True, to='autoplanner.Agent'),
        ),
        migrations.AlterField(
            model_name='agenttaskexclusion',
            name='task',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='organization', chained_model_field='organization', default=None, help_text='Select the task that cannot be performed by the agent.', null=True, on_delete=django.db.models.deletion.CASCADE, show_all=True, to='autoplanner.Task', verbose_name='Task'),
        ),
        migrations.AlterField(
            model_name='category',
            name='balancing_tolerance',
            field=models.FloatField(blank=True, default=None, null=True, verbose_name='Tolerance for balancing the total duration (in seconds)|tasks across agents'),
        ),
    ]
